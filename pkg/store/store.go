/*
Copyright 2020 Adevinta
*/

package store

import "time"

// VulnStore specifies the methods available for
// the vulnerability database adapter.
type VulnStore interface {
	// Targets
	CreateTarget(t Target) (*Target, error)
	FindTarget(t Target) (*Target, error)

	// Sources
	CreateSource(s Source) (*Source, error)
	CreateSourceIfNotExists(s Source) (*Source, error)
	FindSource(s Source) (*Source, error)
	SourceFamilies() (SourceFamilies, error)
	ProcessSourceExecution(s Source, finding []SourceFinding) (Source, error)

	// Issues
	CreateIssue(i Issue) (*Issue, error)
	CreateIssueIfNotExists(i Issue) (*Issue, error)
	UpdateIssueLabels(issueID string, labels []string) error
	FindIssue(i Issue) (*Issue, error)
	GetIssuesBySource(sourceID string) ([]*Issue, error)

	// Findings
	CreateFinding(eventTime time.Time, f Finding, sourceID string) (*Finding, error)
	FindFinding(f Finding) (*Finding, error)
	GetLastFindingEvent(findingID string) (*FindingEvent, error)
	CreateFindingEvent(eventTime time.Time, findingID, sourceID string, score float64, fingerprint string) (*Finding, error)
	GetOpenSourceFindings(id string) ([]SourceFinding, error)
	RecalculateFindingsStatus(s SourceFamily) error
	FindIssueByID(id string) (*Issue, error)
	ExpireFindings(source string, ttl int) (int64, error)
}
