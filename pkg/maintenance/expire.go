/*
Copyright 2021 Adevinta
*/

package maintenance

import (
	"fmt"

	"github.com/adevinta/vulnerability-db/pkg/store"
)

const (
	taskType = "ExpireFindingsTask"
)

// ExpireFindingsTask is a maintenance task responsible for
// expiring the findings that are OPEN and have not been found
// for a configurable time span.
type ExpireFindingsTask struct {
	name        string
	source      string
	findingsTTL int
	store       store.VulnStore
}

// newExpireFindingsTask create a new task to perform periodic
// expiration of findings.
func newExpireFindingsTask(name, source string, ttl int, store store.VulnStore) *ExpireFindingsTask {
	return &ExpireFindingsTask{
		name:        name,
		source:      source,
		findingsTTL: ttl,
		store:       store,
	}
}

// Name returns this task name.
func (t *ExpireFindingsTask) Name() string {
	return t.name
}

// Type returns this task type.
func (t *ExpireFindingsTask) Type() string {
	return taskType
}

// Execute executes the ExpireFindingsTask.
func (t *ExpireFindingsTask) Execute() (TaskResult, error) {
	nUpdates, err := t.store.ExpireFindings(t.source, t.findingsTTL)
	if err != nil {
		return "", err
	}

	res := TaskResult(fmt.Sprintf("%d findings have been expired", nUpdates))

	return res, nil
}
